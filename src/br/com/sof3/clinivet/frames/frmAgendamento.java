/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sof3.clinivet.frames;

import br.com.sof3.clinivet.dao.AgendaDAO;
import br.com.sof3.clinivet.dao.AnimalDAO;
import br.com.sof3.clinivet.dao.ClienteDAO;
import br.com.sof3.clinivet.entidade.Agenda;
import br.com.sof3.clinivet.entidade.Animal;
import br.com.sof3.clinivet.entidade.Cliente;
import static br.com.sof3.clinivet.frames.frmAddProduto.tblFornecedores;
import java.awt.Color;

import java.util.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Formatter;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.text.TableView;

/**
 *
 * @author andrematos
 */
public class frmAgendamento extends javax.swing.JFrame {

    private static List<Animal> animais = new ArrayList<>();
    private static Cliente cliente = new Cliente();
    public frmAgendamento() {
        initComponents();
        carregaData();
        desabilitarCamposAnimal();
        desabilitarCamposCliente();
        desabilitarCamposServico();
        setDefaultCloseOperation(WIDTH);
        setLocationRelativeTo(null);
        setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        sms_inicio_consulta = new javax.swing.JCheckBox();
        sms_termino_consulta = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        cbxAnimal = new javax.swing.JComboBox();
        txtNomeAnimal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        txtRaca = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbxTipoServico = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblCodigoServico = new javax.swing.JLabel();
        data = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHorarios = new javax.swing.JTable();
        cbxInicio = new javax.swing.JComboBox();
        cbxTermino = new javax.swing.JComboBox();
        btnAgendar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaObservacoes = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Agendamento");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jLabel2.setText("Nome");

        jLabel3.setText("Endere√ßo");

        jLabel4.setText("CPF");

        jLabel5.setText("Telefone");

        btnBuscarCliente.setText("Buscar Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Enviar Sms?"));

        sms_inicio_consulta.setText("Inicio da consulta");

        sms_termino_consulta.setText("Termino da consulta");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sms_inicio_consulta)
                    .addComponent(sms_termino_consulta))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sms_inicio_consulta)
                .addGap(18, 18, 18)
                .addComponent(sms_termino_consulta)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTelefone)
                            .addComponent(txtCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(txtNomeCliente))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnBuscarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Animal"));

        cbxAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAnimalActionPerformed(evt);
            }
        });

        jLabel6.setText("Nome");

        jLabel7.setText("Ra√ßa");

        jLabel8.setText("Sexo");

        jLabel9.setText("Animais");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbxAnimal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNomeAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRaca, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Servi√ßo"));

        cbxTipoServico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Consultas", "Exames Laboratoriais", "Cirurgias", "Medicamentos", "Tratamento Odontol√≥gico", "Vacinas e Verm√≠fugos" }));

        jLabel10.setText("Tipo");

        jLabel11.setText("Observa√ß√µes");

        lblCodigoServico.setText("Codigo:");

        data.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dataPropertyChange(evt);
            }
        });

        jLabel13.setText("Data");

        jLabel14.setText("Inicio");

        jLabel15.setText("T√©rmino");

        tblHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00", null},
                {"08:30", null},
                {"09:00", null},
                {"09:30", null},
                {"10:00", null},
                {"10:30", null},
                {"11:00", null},
                {"11:30", null},
                {"12:00", null},
                {"12:30", null},
                {"13:00", null},
                {"13:30", null},
                {"14:00", null},
                {"14:30", null},
                {"15:00", null},
                {"15:30", null},
                {"16:00", null},
                {"16:30", null},
                {"17:00", null},
                {"17:30", null},
                {"18:00", null}
            },
            new String [] {
                "Hor√°rio", "Dia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblHorarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblHorarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblHorarios);
        tblHorarios.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblHorarios.getColumnModel().getColumn(1).setPreferredWidth(1000);

        cbxInicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30" }));
        cbxInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxInicioActionPerformed(evt);
            }
        });

        cbxTermino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00" }));
        cbxTermino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTerminoActionPerformed(evt);
            }
        });

        btnAgendar.setText("Agendar");
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtAreaObservacoes.setColumns(20);
        txtAreaObservacoes.setRows(5);
        jScrollPane2.setViewportView(txtAreaObservacoes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblCodigoServico)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnAgendar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar)
                                .addContainerGap())))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCodigoServico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgendar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(data, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbxTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(cbxInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(516, 516, 516)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        frmPesquisaCliente frmPesquisaCli = new frmPesquisaCliente("agendar");
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void cbxAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAnimalActionPerformed
        atualizaDados(animais);
    }//GEN-LAST:event_cbxAnimalActionPerformed

    private void cbxInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxInicioActionPerformed
       cbxTermino.setSelectedIndex(cbxInicio.getSelectedIndex()+1);
    }//GEN-LAST:event_cbxInicioActionPerformed

    private void cbxTerminoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTerminoActionPerformed
        if(cbxInicio.getSelectedIndex()>=cbxTermino.getSelectedIndex()){
            JOptionPane.showMessageDialog(null, "Dura√ß√£o minima de 30 minutos");
            cbxTermino.setSelectedIndex(cbxInicio.getSelectedIndex()+1);
        }
    }//GEN-LAST:event_cbxTerminoActionPerformed
    
    
    
    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed
        Animal ani = new Animal();
        AgendaDAO agendaDAO = new AgendaDAO();
        List<Agenda> agendas = new LinkedList<>();
        DefaultTableModel dtm = (DefaultTableModel)tblHorarios.getModel();
        for(int aux = 0 ; aux < animais.size();aux++){
            if(cbxAnimal.getSelectedItem().equals(animais.get(aux).getNome())){//pegando o animal que esta selecionado da cbx
                ani = animais.get(aux);
                ani.exibir();
                //JOptionPane.showMessageDialog(null,"Id animal: "+ani.getId()+"  "+cbxAnimal.getSelectedItem()+ " √© igual "+animais.get(aux).getNome());
            }
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");  
        String dataFormatada = sdf.format(data.getDate());
        
        try {
            
            Agenda agenda = new Agenda(0, dataFormatada, cbxInicio.getSelectedItem().toString(), cbxTermino.getSelectedItem().toString(), cbxTipoServico.getSelectedItem().toString(), txtAreaObservacoes.getText(), cliente, ani,sms_inicio_consulta.isSelected(),sms_termino_consulta.isSelected());
            for(int aux=0 ; aux < dtm.getRowCount() ; aux++){
                if((dtm.getValueAt(aux, 0).equals(agenda.getHora_inicio())) && !dtm.getValueAt(aux, 1).toString().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Hor√°rio Indispon√≠vel");
                    return;
                }
            }
            agendaDAO.fazerAgendamento(agenda);
            agendas = agendaDAO.buscarAgendamentosDia(dataFormatada);
            limparTabela();
            atualizarTabela(agendas);
            lblCodigoServico.setText("Codigo: " + agendaDAO.getCodigo());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao fazer agendamento no bot√£o agendar na classe frmAgendamento: "+ ex);
        }
    }//GEN-LAST:event_btnAgendarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed
    public void atualizarTabela(List<Agenda> agenda){
        DefaultTableModel dtm = (DefaultTableModel)tblHorarios.getModel();
        int cont=-1;
        for(int aux = 0; aux < agenda.size(); aux++){
                        for(int aux1 = 0; aux1 < tblHorarios.getRowCount(); aux1++){
                            
                            if(dtm.getValueAt(aux1, 0).equals(agenda.get(aux).getHora_inicio())){
                                dtm.setValueAt(agenda.get(aux).addTable(), aux1, 1);
                                cont=1;//significa o horario inicial da consulta
                            }
                            if(cont==1){//se o cont for igual a 1 significa que a consulta iniciou e ainda n√£o terminou ent√£o pode ser setado o addTable na tabela
                                dtm.setValueAt(agenda.get(aux).addTable(), aux1, 1);
                            }
                            if(dtm.getValueAt(aux1, 0).equals(agenda.get(aux).getHora_termino())){
                                dtm.setValueAt(agenda.get(aux).addTable(), aux1, 1);
                                cont=0;//significa o horario final da consulta
                            }
                               
                        }
                   }
    }
    private void dataPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dataPropertyChange
        
        //arrumar fun√ß√£o que ira carregar as datas na tabela
        AgendaDAO agendaDAO = new AgendaDAO();
        List<Agenda> agenda = new LinkedList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");  
        String dataFormatada="";
        
        try {
            limparTabela();
            if(data.getDate()!= null){
                
                dataFormatada = sdf.format(data.getDate());
      
                agenda = agendaDAO.buscarAgendamentosDia(dataFormatada);
                
                if(agenda.size() > 0){
                    limparTabela();
                    atualizarTabela(agenda);

                }
                
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao carregar agendamentos na tabela" +ex);
        }
    }//GEN-LAST:event_dataPropertyChange
    
    public void limparTabela(){
        DefaultTableModel dtm =  (DefaultTableModel) tblHorarios.getModel();
        int cont = dtm.getRowCount();
            for(int aux=cont-1 ;   aux>=0 ;  aux--){//removendo valores da tabela
                dtm.setValueAt("", aux, 1);
            }
    }
    public static void desabilitandoEdicaoCampos(){//o usuario n√£o podera editar os dados do cliente e do animal)
        txtNomeCliente.setEditable(false);
        txtCpf.setEditable(false);
        txtEndereco.setEditable(false);
        txtTelefone.setEditable(false);
        txtRaca.setEditable(false);
        txtSexo.setEditable(false);
        txtNomeAnimal.setEditable(false);
        
    }
    public static void desabilitarCamposAnimal(){//os campos s√≥ ser√£o habilitados se o usuario selecionar um cliente
        txtNomeAnimal.setEnabled(false);
        txtRaca.setEnabled(false);
        txtSexo.setEnabled(false);
        cbxAnimal.setEnabled(false);
    }
    public static void desabilitarCamposCliente(){
        txtNomeCliente.setEnabled(false);
        txtCpf.setEnabled(false);
        txtEndereco.setEnabled(false);
        txtTelefone.setEnabled(false);
        sms_inicio_consulta.setEnabled(false);
        sms_termino_consulta.setEnabled(false);
    }
    public static void desabilitarCamposServico(){
        cbxTipoServico.setEnabled(false);
        data.setEnabled(false);
        cbxInicio.setEnabled(false);
        cbxTermino.setEnabled(false);
        txtAreaObservacoes.setEnabled(false);
        btnAgendar.setEnabled(false);
        tblHorarios.setEnabled(false);
    }
    public static void habilitarCamposAnimal(){//os campos s√≥ ser√£o habilitados se o usuario selecionar um cliente
        txtNomeAnimal.setEnabled(true);
        txtRaca.setEnabled(true);
        txtSexo.setEnabled(true);
        cbxAnimal.setEnabled(true);
    }
    public static void habilitarCamposCliente(){//habilitar campos quando o usuario seleciona um cliente
        txtNomeCliente.setEnabled(true);
        txtCpf.setEnabled(true);
        txtEndereco.setEnabled(true);
        txtTelefone.setEnabled(true);
        sms_inicio_consulta.setEnabled(true);
        sms_termino_consulta.setEnabled(true);
    }
    
    public static void habilitarCamposServico(){
        cbxTipoServico.setEnabled(true);
        data.setEnabled(true);
        cbxInicio.setEnabled(true);
        cbxTermino.setEnabled(true);
        txtAreaObservacoes.setEnabled(true);
        btnAgendar.setEnabled(true);
        tblHorarios.setEnabled(true);
    }
    
    public static void setDados(Cliente cli){//fun√ß√£o usada na classe frmPesquisaCliente para adicionar os dados nas txt's
        AgendaDAO ageDAO = new AgendaDAO();
        txtNomeCliente.setText(cli.getNome());
        txtCpf.setText(cli.getCpf());
        txtEndereco.setText(cli.getEndereco());
        txtTelefone.setText(cli.getTelefone());
        sms_inicio_consulta.setSelected(cli.isSms_inicio_consulta());
        sms_termino_consulta.setSelected(cli.isSms_fim_consulta());
        carregaAnimais(cli);
        desabilitandoEdicaoCampos();
        try {
            lblCodigoServico.setText("Codigo: " + ageDAO.getCodigo());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao buscar codigo do agendamento na classe frmAgendamento: "+ ex);
        }
    }
    
    public static void carregaAnimais(Cliente cli){ //fun√ß√£o que carregara os dados dos animais do cliente
        AnimalDAO aniDAO = new AnimalDAO();
        ClienteDAO cliDAO = new ClienteDAO();
        cliente = cli;
        habilitarCamposCliente();
        
        try{
            animais = aniDAO.getTodosAnimaisDoCliente(cli.getId());
            String nomes[];
            if(animais.size()>0){
                nomes = new String[animais.size()];
                habilitarCamposAnimal();
                habilitarCamposServico();
            }else{
                nomes = new String[1];
                nomes[0] = "Nenhum Animal Cadastrado";
                limpaCampos();  
            }
  
            for(int aux = 0 ; aux < animais.size(); aux++){
                nomes[aux] = animais.get(aux).getNome();
            }
     
            DefaultComboBoxModel comboNomeAnimais = new DefaultComboBoxModel(nomes);
            cbxAnimal.setModel(comboNomeAnimais);
            atualizaDados(animais);
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,"Erro ao carregar animais na classe frmAgendamento"+ ex);
        }
    }
    public static void limpaCampos(){//limpa campos dos animais
        txtNomeAnimal.setText("");
        txtRaca.setText("");
        txtSexo.setText("");
    }
    public static void atualizaDados(List <Animal> animal){//atualiza os dados dos animais do cliente, caso o usuario selecione outro cliente
        for(int aux = 0 ; aux < animal.size() ; aux++){
            if(animal.get(aux).getNome().equals(cbxAnimal.getSelectedItem().toString())){
                txtNomeAnimal.setText(animal.get(aux).getNome());
                txtSexo.setText(animal.get(aux).getSexo());
                txtRaca.setText(animal.get(aux).getRaca().getNome());
            }
        }
    }
    public  void carregaData(){
       String dataAtual = new SimpleDateFormat("dd/MM/yyyy").format(new Date());
       DateFormat dataAtual2 = new SimpleDateFormat("dd/MM/yyyy");
       Date date = null;
        try {
            date = (java.util.Date)dataAtual2.parse(dataAtual);
            data.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(frmAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btnAgendar;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCancelar;
    private static javax.swing.JComboBox cbxAnimal;
    private static javax.swing.JComboBox cbxInicio;
    private static javax.swing.JComboBox cbxTermino;
    private static javax.swing.JComboBox cbxTipoServico;
    private static com.toedter.calendar.JDateChooser data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JLabel lblCodigoServico;
    private static javax.swing.JCheckBox sms_inicio_consulta;
    private static javax.swing.JCheckBox sms_termino_consulta;
    private static javax.swing.JTable tblHorarios;
    private static javax.swing.JTextArea txtAreaObservacoes;
    private static javax.swing.JTextField txtCpf;
    private static javax.swing.JTextField txtEndereco;
    private static javax.swing.JTextField txtNomeAnimal;
    private static javax.swing.JTextField txtNomeCliente;
    private static javax.swing.JTextField txtRaca;
    private static javax.swing.JTextField txtSexo;
    private static javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
