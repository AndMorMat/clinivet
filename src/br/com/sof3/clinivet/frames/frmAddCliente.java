/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sof3.clinivet.frames;

import br.com.sof3.clinivet.dao.AnimalDAO;
import br.com.sof3.clinivet.dao.CidadeDAO;
import br.com.sof3.clinivet.dao.ClienteDAO;
import br.com.sof3.clinivet.dao.EstadoDAO;
import br.com.sof3.clinivet.entidade.Cidade;
import br.com.sof3.clinivet.entidade.Cliente;
import br.com.sof3.clinivet.entidade.Estado;
import br.com.sof3.clinivet.entidade.Vendedor;
import java.awt.Color;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Renan
 */
public class frmAddCliente extends javax.swing.JDialog {
    
    private Cliente cliAntigo = new Cliente();
    /** Creates new form frmAddCustomer */
    String param;
    public frmAddCliente(String parametro, Cliente cli) {
        
        
        initComponents();
        ocultarNotificacoes();
        txtNome.requestFocus();
        carregaEstados();
        carregaCidades();
        
        setLocationRelativeTo(null);
        param = parametro;
        if(parametro.equals("editar")){
            carregarCampos(cli);
            tituloCadastroCliente.setText("Editar Cliente");
            cliAntigo = cli;
            btnOK.setText("Editar");
        }else if(parametro.equals("cadastrar")){
            
        }
        
        setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblRua = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        comboCidades = new javax.swing.JComboBox();
        comboEstados = new javax.swing.JComboBox();
        txtEmail = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        lblSobrenome = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        lblCelular = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        sms_inicio_consulta = new javax.swing.JCheckBox();
        sms_termino_consulta = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtDataNasc = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCelular = new javax.swing.JFormattedTextField();
        lblValidacaoNome = new javax.swing.JLabel();
        lblValidacaoNascimento = new javax.swing.JLabel();
        lblValidacaoEmail = new javax.swing.JLabel();
        lblValidacaoSobrenome = new javax.swing.JLabel();
        lblValidacaoCpf = new javax.swing.JLabel();
        lblValidacaoEndereco = new javax.swing.JLabel();
        lblValidacaoBairro = new javax.swing.JLabel();
        lblAuxNovificacao = new javax.swing.JLabel();
        lblAuxNovificacao1 = new javax.swing.JLabel();
        lblAuxNovificacao2 = new javax.swing.JLabel();
        lblAuxNovificacao3 = new javax.swing.JLabel();
        lblAuxNovificacao4 = new javax.swing.JLabel();
        lblAuxNovificacao5 = new javax.swing.JLabel();
        lblAuxNovificacao6 = new javax.swing.JLabel();
        lblAuxNovificacao7 = new javax.swing.JLabel();
        lblAuxNovificacao8 = new javax.swing.JLabel();
        tituloCadastroCliente = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(254, 254, 254));
        setFont(new java.awt.Font("Abyssinica SIL", 1, 10)); // NOI18N
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(214, 255, 213));

        jPanel1.setBackground(new java.awt.Color(195, 239, 198));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(80, 80, 80));

        lblRua.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblRua.setText("Endere√ßo:*");

        lblCidade.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblCidade.setText("Cidade:");

        lblBairro.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblBairro.setText("Bairro:*");

        comboCidades.setToolTipText("");
        comboCidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCidadesActionPerformed(evt);
            }
        });

        comboEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEstadosActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });

        lblNome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblNome.setText("Nome:*");

        lblSobrenome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblSobrenome.setText("Sobrenome:*");

        lblCPF.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblCPF.setText("CPF:*");

        lblTelefone.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblTelefone.setText("Telefone:");

        lblCelular.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblCelular.setText("Celular:");

        lblEstado.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstado.setText("Estado:");

        lblEmail.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEmail.setText("E-mail:");

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jPanel2.setBackground(new java.awt.Color(195, 239, 198));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Deseja receber sms para"));

        sms_inicio_consulta.setText("Avisar que esta se aproximando da data de um agendamento");

        sms_termino_consulta.setText("Avisar o termino de uma consulta");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(53, 53, 53)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sms_termino_consulta)
                    .add(sms_inicio_consulta))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(sms_inicio_consulta)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(sms_termino_consulta)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Data Nasc.:*");

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataNascActionPerformed(evt);
            }
        });

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });

        lblValidacaoNome.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoNome.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoNome.setText("Nome n√£o pode ser vazio");

        lblValidacaoNascimento.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoNascimento.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoNascimento.setText("Data de Nascimento n√£o pode ser vazio");

        lblValidacaoEmail.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoEmail.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoEmail.setText("Email Inv√°lido");

        lblValidacaoSobrenome.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoSobrenome.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoSobrenome.setText("Sobrenome n√£o pode ser vazio");

        lblValidacaoCpf.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoCpf.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoCpf.setText("CPF est√° vazio ou inv√°lido");

        lblValidacaoEndereco.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoEndereco.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoEndereco.setText("Endere√ßo n√£o pode ser vazio");

        lblValidacaoBairro.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblValidacaoBairro.setForeground(new java.awt.Color(255, 0, 0));
        lblValidacaoBairro.setText("Bairro n√£o pode ser vazio");

        lblAuxNovificacao.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao.setText("aux");

        lblAuxNovificacao1.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao1.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao1.setText("aux");

        lblAuxNovificacao2.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao2.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao2.setText("aux");

        lblAuxNovificacao3.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao3.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao3.setText("aux");

        lblAuxNovificacao4.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao4.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao4.setText("aux");

        lblAuxNovificacao5.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao5.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao5.setText("aux");

        lblAuxNovificacao6.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao6.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao6.setText("aux");

        lblAuxNovificacao7.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao7.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao7.setText("aux");

        lblAuxNovificacao8.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        lblAuxNovificacao8.setForeground(new java.awt.Color(195, 239, 198));
        lblAuxNovificacao8.setText("aux");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(22, 22, 22)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblTelefone)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, lblEmail)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, lblEstado))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(txtEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 206, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(jPanel1Layout.createSequentialGroup()
                                            .add(lblValidacaoEmail)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(lblAuxNovificacao6))
                                        .add(txtTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(lblAuxNovificacao4))
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(22, 22, 22)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(lblCelular)
                                            .add(lblRua)))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(lblAuxNovificacao5))))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(23, 23, 23)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(0, 0, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(comboEstados, 0, 139, Short.MAX_VALUE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(lblCidade)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(comboCidades, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(9, 9, 9)
                                        .add(lblBairro)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(lblValidacaoBairro)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(lblAuxNovificacao8))
                                            .add(txtBairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel1)
                            .add(lblNome))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(txtNome)
                                    .add(txtDataNasc, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblSobrenome)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblCPF)))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(lblValidacaoNome)
                                        .add(64, 64, 64)
                                        .add(lblAuxNovificacao))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(lblValidacaoNascimento)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(lblAuxNovificacao1)))
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(lblValidacaoSobrenome)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(lblAuxNovificacao3))
                            .add(txtCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txtSobrenome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txtCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txtEndereco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(lblValidacaoEndereco)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(lblAuxNovificacao7))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(lblValidacaoCpf)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(lblAuxNovificacao2)))))
                .add(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(15, 15, 15)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblValidacaoNome)
                    .add(lblValidacaoSobrenome)
                    .add(lblAuxNovificacao)
                    .add(lblAuxNovificacao3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblSobrenome)
                    .add(lblNome)
                    .add(txtSobrenome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblValidacaoNascimento)
                    .add(lblValidacaoCpf)
                    .add(lblAuxNovificacao1)
                    .add(lblAuxNovificacao2))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtDataNasc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCPF))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblAuxNovificacao4)
                    .add(lblAuxNovificacao5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTelefone)
                    .add(txtTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCelular)
                    .add(txtCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(lblValidacaoEmail)
                        .add(lblAuxNovificacao6))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(lblValidacaoEndereco)
                        .add(lblAuxNovificacao7)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(txtEndereco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblRua)
                        .add(txtEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(lblEmail))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblValidacaoBairro)
                    .add(lblAuxNovificacao8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtBairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblBairro)
                    .add(comboCidades, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCidade)
                    .add(comboEstados, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblEstado))
                .add(18, 18, 18)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(26, 26, 26))
        );

        tituloCadastroCliente.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tituloCadastroCliente.setForeground(new java.awt.Color(36, 114, 76));
        tituloCadastroCliente.setText("Cadastro de Cliente");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sof3/clinivet/frames/Actions-user-group-new-icon.png"))); // NOI18N
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(btnOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(tituloCadastroCliente)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(tituloCadastroCliente)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(25, 25, 25)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnOK)
                    .add(btnCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(25, 25, 25))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        
        ClienteDAO cdao = new ClienteDAO();//Consultar banco de clientes
        int duplicidadeCPF = 0;//Validador de cpf duplicado
        if(!verificaCampos()){
            JOptionPane.showMessageDialog(null, "Corrija todos os erros antes de continuar!");
            return;
        }      
        try {                     
                if(param.equals("cadastrar")){
                     if(cdao.getCPFDuplicado(txtCPF.getText().toString())){//Consultando no banco o CPf
                        duplicidadeCPF = JOptionPane.showConfirmDialog (null, "CPF j√° cadastrado, deseja alterar CPF desse cadastro?","CPF j√° em uso",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                        
                        if(duplicidadeCPF ==2)//Caso o usuario n√£o deseje altera o cpf, apenas cancelar a inser√ß√£o
                            setVisible(false);
                    }else{//Cpf n√£o encontrado no banco
                
                    int opc = JOptionPane.showConfirmDialog(this, "Voc√™ tem certeza?","Adicionar Cliente",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if (opc != 0) {
                        return;
                    }


                        Cliente cliente = new Cliente();
                        CidadeDAO citydao = new CidadeDAO();
                        cliente.setNome(txtNome.getText().toUpperCase());
                        cliente.setSobrenome(txtSobrenome.getText().toUpperCase());
                        JOptionPane.showMessageDialog(null, txtDataNasc.getText());
                        cliente.setDataNasc(txtDataNasc.getText());
                        cliente.setCpf(txtCPF.getText().toUpperCase());
                        cliente.setTelefone(txtTelefone.getText());
                        cliente.setCelular(txtCelular.getText());
                        cliente.setEmail(txtEmail.getText().toUpperCase());
                        cliente.setCidade(citydao.getCidadeByName(String.valueOf(comboCidades.getSelectedItem())));
                        cliente.setBairro(txtBairro.getText().toUpperCase());
                        cliente.setEndereco(txtEndereco.getText().toUpperCase());
                        cliente.setSms_inicio_consulta(sms_inicio_consulta.isSelected());
                        cliente.setSms_fim_consulta(sms_termino_consulta.isSelected());
                        cliente.setInativo(false);
                        try{
                            cdao.adicionaCliente(cliente);
                        }catch(Exception ex){
                            JOptionPane.showMessageDialog(null,"Erro ao adicionar cliente no banco na classe frmAddCliente: "+ ex);
                        }
                        setVisible(false);
                     }
                }else if(param.equals("editar")){
                    if(cdao.getCPFDuplicado(txtCPF.getText().toString()) &&  !cliAntigo.getCpf().toString().equals(txtCPF.getText().toString())){//Consultando no banco o CPf e verifica se foi alterado antes de iniciar a edi√ß√£o
                        duplicidadeCPF = JOptionPane.showConfirmDialog (null, "CPF que foi alterado j√° est√° cadastrado, deseja alterar CPF desse cadastro?","CPF j√° em uso",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                        
                        if(duplicidadeCPF ==2)//Caso o usuario n√£o deseje altera o cpf, apenas cancelar a inser√ß√£o
                            setVisible(false);
                    }else{//Cpf n√£o encontrado no banco
                   
                    
                    //JOptionPane.showMessageDialog(null, "Editar em constru√ß√£o");
                    int opc = JOptionPane.showConfirmDialog(this, "Voc√™ tem certeza?","Editar Cliente",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if (opc != 0) {
                        return;
                    }

                        Cliente cli = new Cliente();
                        ClienteDAO cliDAO = new ClienteDAO();
                        CidadeDAO cityDAO = new CidadeDAO();

                        Cidade ci = new Cidade();

                        ci = cityDAO.getCidadeByName(comboCidades.getSelectedItem().toString());

                        cli.cadastrar(cliDAO.getIdByCpf((cliAntigo.getCpf())),
                                txtNome.getText().toUpperCase(),
                                txtSobrenome.getText().toUpperCase(),
                                txtDataNasc.getText(),
                                txtCPF.getText(),
                                txtTelefone.getText(),
                                txtCelular.getText(),
                                txtEmail.getText().toUpperCase(),
                                txtEndereco.getText().toUpperCase(),
                                txtBairro.getText().toUpperCase(),
                                ci,
                                sms_inicio_consulta.isSelected(),
                                sms_termino_consulta.isSelected(),
                                false);
                        JOptionPane.showMessageDialog(null, "cliente cadastrado:\n\n"+cli.exibir());
                        cliDAO.atualizarCliente(cli);
                        setVisible(false);
                }}
                
                
      
        } catch (SQLException ex) {
            Logger.getLogger(frmAddCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao conectar com banco de dados cliente da frmAddCliente");
        }
        
    }//GEN-LAST:event_btnOKActionPerformed
    private void ocultarNotificacoes(){
        lblValidacaoNome.setVisible(false);
        lblValidacaoSobrenome.setVisible(false);
        lblValidacaoNascimento.setVisible(false);
        lblValidacaoCpf.setVisible(false);
        lblValidacaoEmail.setVisible(false);
        lblValidacaoEndereco.setVisible(false);
        lblValidacaoBairro.setVisible(false);
    }
    private boolean verificaCampos(){
        int erros=0;
        if(txtNome.getText().isEmpty()){
            lblValidacaoNome.setVisible(true);
            erros++;
        }else{
            lblValidacaoNome.setVisible(false);
            
        }
        
        if(txtSobrenome.getText().isEmpty()){
            erros++;
            lblValidacaoSobrenome.setVisible(true);
        }else{
            lblValidacaoSobrenome.setVisible(false);
        }
//        if(txtDataNasc.getText().trim().equals("")){
//            erros++;
//            lblValidacaoNascimento.setVisible(true);
//        }else{
//            lblValidacaoNascimento.setVisible(false);
//        }
        if(txtCPF.getText().trim().equals("")){
            erros++;
            lblValidacaoCpf.setVisible(true);
        }else{
            lblValidacaoCpf.setVisible(false);
        }
        
        if(txtEndereco.getText().trim().equals("")){
            erros++;
            lblValidacaoEndereco.setVisible(true);
        }else{
            lblValidacaoEndereco.setVisible(false);
        }
            
                
        if(txtBairro.getText().trim().equals("")){
            erros++;
            lblValidacaoBairro.setVisible(true);
        }else{
            lblValidacaoBairro.setVisible(false);
        }
        
        if(txtDataNasc.getText().trim().length()!=10){
            erros++;
            lblValidacaoNascimento.setVisible(true);
        }else{
            lblValidacaoNascimento.setVisible(false);
        }
            
        if(txtCPF.getText().substring(0).equals("   .   .   -  ")){
            erros++;
            lblValidacaoCpf.setVisible(true);
        }else{
            lblValidacaoCpf.setVisible(false);
        }
        if(erros>0)
            return false;
        return true;
    }
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularActionPerformed

    private void txtDataNascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataNascActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataNascActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void comboEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEstadosActionPerformed
        carregaCidades();
    }//GEN-LAST:event_comboEstadosActionPerformed

    private void comboCidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCidadesActionPerformed

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if ((txtEmail.getText().contains("@")) && (txtEmail.getText().contains("."))
                && (!txtEmail.getText().contains(" "))) { String usuario = new String(txtEmail.getText().substring(0, txtEmail.getText().lastIndexOf('@')));
                                                          String dominio = new String(txtEmail.getText().substring(txtEmail.getText().lastIndexOf ('@') + 1, 
                                                                  txtEmail.getText().length()));
                                                          if ((usuario.length() >=1) && (!usuario.contains("@")) && (dominio.contains(".")) && (!dominio.contains("@"))
                                                                  && (dominio.indexOf(".") >= 1) && (dominio.lastIndexOf(".") < dominio.length() - 1)) { 
                                                                  lblValidacaoEmail.setVisible(false);
                                                          } else { 
                                                              txtEmail.setText("E-MAIL INV√ÅLIDO");
                                                          } 
           lblValidacaoEmail.setVisible(false);
        }else{
            
            lblValidacaoEmail.setVisible(true);
        }
        if(txtEmail.getText().isEmpty()){
           lblValidacaoEmail.setVisible(false); 
        }
    }//GEN-LAST:event_txtEmailFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox comboCidades;
    private javax.swing.JComboBox comboEstados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblAuxNovificacao;
    private javax.swing.JLabel lblAuxNovificacao1;
    private javax.swing.JLabel lblAuxNovificacao2;
    private javax.swing.JLabel lblAuxNovificacao3;
    private javax.swing.JLabel lblAuxNovificacao4;
    private javax.swing.JLabel lblAuxNovificacao5;
    private javax.swing.JLabel lblAuxNovificacao6;
    private javax.swing.JLabel lblAuxNovificacao7;
    private javax.swing.JLabel lblAuxNovificacao8;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRua;
    private javax.swing.JLabel lblSobrenome;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblValidacaoBairro;
    private javax.swing.JLabel lblValidacaoCpf;
    private javax.swing.JLabel lblValidacaoEmail;
    private javax.swing.JLabel lblValidacaoEndereco;
    private javax.swing.JLabel lblValidacaoNascimento;
    private javax.swing.JLabel lblValidacaoNome;
    private javax.swing.JLabel lblValidacaoSobrenome;
    private javax.swing.JCheckBox sms_inicio_consulta;
    private javax.swing.JCheckBox sms_termino_consulta;
    private javax.swing.JLabel tituloCadastroCliente;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSobrenome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
    
    public void carregarCampos(Cliente c){
        txtNome.setText(c.getNome());
        txtSobrenome.setText(c.getSobrenome());
        txtCPF.setText(c.getCpf());
        txtDataNasc.setText(c.getDataNasc());
        txtTelefone.setText(c.getTelefone());
        txtCelular.setText(c.getCelular());
        txtEmail.setText(c.getEmail());
        txtEndereco.setText(c.getEndereco());
        txtBairro.setText(c.getBairro());
        comboCidades.setSelectedItem(c.getCidade().getNome());
        comboEstados.setSelectedItem(c.getCidade().getEstado().getNome());
        sms_inicio_consulta.setSelected(c.isSms_inicio_consulta());
        sms_termino_consulta.setSelected(c.isSms_fim_consulta());
    }
    
    
    private void carregaCidades(){
        EstadoDAO estadoDAO = new EstadoDAO();
        CidadeDAO cidadeDAO = new CidadeDAO();
        List<Cidade> cidade = new LinkedList<>();
        
        
        try{
            int id_estado = estadoDAO.getIdEstado(comboEstados.getSelectedItem().toString());
            
            cidade = cidadeDAO.getAllCidadesById_Estado(id_estado);
            
            String nomes[] = new String[cidade.size()];
            for(int aux=0;aux<cidade.size();aux++){
                nomes[aux] = cidade.get(aux).getNome();
            }
            DefaultComboBoxModel comboEstado = new DefaultComboBoxModel(nomes);
            comboCidades.setModel(comboEstado);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Erro ao adicionar cidades no comboCidades na classe frmAddCliente");
        }
        
    }
    private void carregaEstados() {

        // carrega combo de estados
        try {
            EstadoDAO estadoDAO = new EstadoDAO();
            Vector<Estado> estados = new Vector<Estado>(estadoDAO.getAllEstados());
            String[] nomes = new String[estados.size()];
            for(int aux=0; aux<estados.size();aux++){
                nomes[aux] = estados.get(aux).getNome();
            }
            DefaultComboBoxModel comboEstado = new DefaultComboBoxModel(nomes);
            comboEstados.setModel(comboEstado);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao carregar a lista de estados");
        }
       
    }
}
